/*Knight class*/

public class Knight extends chessPiece{

	//initializing Knight
	public Knight (String newColor, int x, int y){
		this.x = x;
		this.y = y;
		this.color = newColor;
		
	}
	
	//copy constructor
	public Knight(Knight copy){
		this.color = copy.color;
		this.x = copy.x;
		this.y = copy.y;
	}
	
	/* Function to determine the different ways in which the Knight can move. Can move only if
	 * x-distance is 1 and y-distance is 2 OR x-distance is 2 and y-distance is 1.
	 * 
     * @param ChessBoard chess creating instance of board
     * @param int currX, int currY current position of chess piece
     * @param int newX, int newY new position of piece if it is a legal move
     *  
     */
	public boolean canMove(ChessBoard chess, int currX, int currY, int newX, int newY){
		boolean valid = false;
		
		//Checking the distance and if it is a valid position between current and new position. 
	
		int distX = Math.abs(currX - newX);
		int distY = Math.abs(currY - newY);
		
		if ((distX == 2 && distY == 1) || (distX == 1 && distY == 2)){
			valid = true;
		}
		
		return valid;
	}
	
}
